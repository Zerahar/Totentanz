{"version":3,"sources":["js/Home.js","js/Info.js","js/AdminDashboard.js","js/PlayerDashboard.js","js/ChatList.js","js/Transactions.js","js/OpenChat.js","js/App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["NewsFeed","Home","class","alt","loading","Info","AdminDashboard","props","editCharacter","bind","deleteCharacter","editUser","deleteUser","success","e","this","changeCharacter","characters","find","character","_id","target","id","changeUser","player","players","window","confirm","userName","fetch","REACT_APP_SERVER_URL","then","response","json","result","ok","error","catch","fetchCharacters","fetchPlayers","name","characterName","playerName","map","onClick","to","userType","login","admin","Component","Editor","editor","state","something","init","element","document","getElementById","type","onChange","html","changeEditor","actions","icon","title","getSelection","toString","linesToDelete","split","join","exec","formatBlock","execCommand","content","innerHTML","className","NewCharacter","age","gender","saldo","description","mechanics","plots","redirect","newId","handleChange","handleSubmit","checkInput","checkSuccess","event","value","checked","setState","preventDefault","oldPlayer","newPlayer","data","JSON","stringify","replace","parseFloat","url","method","mode","headers","body","parsed","fail","forEach","part","counter","form","classList","add","checkValidity","length","clearSelectedCharacter","onSubmit","noValidate","maxLength","required","pattern","NewUser","selectedCharacter","isLoaded","validateForm","existingUser","fillFields","clearSelectedUser","minLength","placeholder","PlayerInfo","dangerouslySetInnerHTML","__html","Pay","amount","submit","warning","isReady","transaction","time","Date","now","user","recipient","statusText","options","PlayerDashboard","access","loggedCharacter","ChatList","chats","selectedCharacters","selectedChat","createChat","fetchChats","res","chat","newParticipants","participants","participant","push","a","prevState","filteredArray","filter","console","log","changeChat","index","array","removeChat","Transactions","history","toLocaleString","OpenChat","input","nameSent","ready","currentName","noMessages","sendMessage","messageBeingWritten","addMessage","WebSocket","MozWebSocket","Error","ws","characterId","send","onmessage","evt","message","parse","newMessage","timeStyle","dateStyle","text","author","authorId","scrollTop","scrollHeight","msg","clear","header","noMessagesTip","require","App","userId","userCharacter","notifMsg","notifSender","selectedUser","defaultCharacter","logout","loginSuccess","showError","closeMenu","setReady","decodeURIComponent","cookie","charAt","substring","indexOf","sort","b","onclose","toast","Toast","show","onopen","close","readyState","onerror","alert","setTimeout","remove","screen","width","navbar","Collapse","hide","loginForm","for","playerPage","adminPage","role","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-live","aria-atomic","exact","path","selectCharacter","selectUser","undefined","data-bs-dismiss","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.366f0b47.chunk.js","sourcesContent":["function NewsFeed() {\r\n    return (\r\n        <article>\r\n            <h3>Update 11/11/2021</h3>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in.</p>\r\n        </article>\r\n    );\r\n}\r\n\r\nfunction Home() {\r\n    return (<div>\r\n        <figure class=\"front-image\" alt=\"Kuva mekaanikosta värikkäässä valaistuksessa\" loading=\"lazy\"></figure>\r\n        <main class=\"text-container front-container container\">\r\n\r\n            <h2>Home</h2>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n            <div>\r\n                <NewsFeed />\r\n                <NewsFeed />\r\n            </div>\r\n        </main></div>\r\n    );\r\n}\r\nexport default Home","function Info() {\r\n  return (\r\n    <main class=\"text-container container\">\r\n      <h2>Info</h2>\r\n      <aside class=\"info-box\"><h3>Aikataulu</h3>\r\n        <ul>\r\n          <li>8:00 Paikka avautuu</li>\r\n          <li>10:00 Ilmoittautuminen</li>\r\n          <li>11:00 Peli-info</li>\r\n          <li>12:00 Peli alkaa</li>\r\n          <li>15:00 Artistin esiintyminen</li>\r\n          <li>17:00 Kasinoilta</li>\r\n          <li>21:00 Pääesiintyjä</li>\r\n        </ul>\r\n      </aside>\r\n      <p>Cyberpunk is a subgenre of science fiction in a dystopian futuristic setting that tends to focus on a \"combination of lowlife and high tech\"[1] featuring advanced technological and scientific achievements, such as artificial intelligence and cybernetics, juxtaposed with a degree of breakdown or radical change in the social order.[2] Much of cyberpunk is rooted in the New Wave science fiction movement of the 1960s and 1970s, when writers like Philip K. Dick, Roger Zelazny, John Brunner, J. G. Ballard, Philip José Farmer and Harlan Ellison examined the impact of drug culture, technology, and the sexual revolution while avoiding the utopian tendencies of earlier science fiction.</p>\r\n\r\n      <p>Comics exploring cyberpunk themes began appearing as early as Judge Dredd, first published in 1977.[3] Released in 1984, William Gibson's influential debut novel Neuromancer would help solidify cyberpunk as a genre, drawing influence from punk subculture and early hacker culture. Other influential cyberpunk writers included Bruce Sterling and Rudy Rucker. The Japanese cyberpunk subgenre began in 1982 with the debut of Katsuhiro Otomo's manga series Akira, with its 1988 anime film adaptation later popularizing the subgenre.</p>\r\n\r\n      <h3>Peliohjeet</h3>\r\n      <p>Early films in the genre include Ridley Scott's 1982 film Blade Runner, one of several of Philip K. Dick's works that have been adapted into films. The films Johnny Mnemonic (1995)[4] and New Rose Hotel (1998),[5][6] both based upon short stories by William Gibson, flopped commercially and critically. The Matrix trilogy (1999–2003) were some of the most successful cyberpunk films. Newer cyberpunk media includes Blade Runner 2049 (2017), a sequel to the original 1982 film, as well as Upgrade (2018), Alita: Battle Angel (2019) based on the 1990s Japanese manga Battle Angel Alita, the 2018 Netflix TV series Altered Carbon based on Richard K. Morgan's 2002 novel of the same name, and the video game Cyberpunk 2077 (2020), based on the table-top role-playing game Cyberpunk. </p>\r\n\r\n    </main>\r\n  );\r\n}\r\nexport default Info","// Import React dependencies.\r\nimport React, { Component } from 'react'\r\nimport { init, formatBlock, exec } from 'pell';\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport 'pell/dist/pell.css'\r\nconst { REACT_APP_SERVER_URL } = process.env;\r\nclass AdminDashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.editCharacter = this.editCharacter.bind(this);\r\n    this.deleteCharacter = this.deleteCharacter.bind(this)\r\n    this.editUser = this.editUser.bind(this)\r\n    this.deleteUser = this.deleteUser.bind(this)\r\n    this.success = this.success.bind(this)\r\n  }\r\n  editCharacter(e) {\r\n    this.props.changeCharacter(this.props.characters.find(character => character._id === e.target.id))\r\n  }\r\n  editUser(e) {\r\n    this.props.changeUser(e.target.id)\r\n  }\r\n  deleteUser(e) {\r\n    const player = this.props.players.find(player => player._id === e.target.id)\r\n    let c = window.confirm(\"Haluatko varmasti poistaa käyttäjän \" + player.userName + \"?\")\r\n    if (c) {\r\n      fetch(REACT_APP_SERVER_URL + '/user/delete/' + e.target.id)\r\n        .then(response => response.json())\r\n        .then(result => result.ok === 1 ? this.success() : this.props.error(\"Käyttäjän poisto ei onnistunut.\"))\r\n        .catch(error => this.props.error(error, \"danger\"))\r\n    }\r\n  }\r\n  success() {\r\n    this.props.error(\"Poisto onnistui!\", \"success\")\r\n    this.props.fetchCharacters()\r\n    this.props.fetchPlayers()\r\n  }\r\n  deleteCharacter(e) {\r\n    const character = this.props.characters.find(character => character._id === e.target.id)\r\n    let c = window.confirm(\"Haluatko varmasti poistaa hahmon \" + character.name + \"?\")\r\n    if (c) {\r\n      fetch(REACT_APP_SERVER_URL + '/character/delete/' + e.target.id)\r\n        .then(response => response.json())\r\n        .then(result => result.ok === 1 ? this.success() : this.props.error(\"Käyttäjän poisto ei onnistunut.\"))\r\n        .catch(error => this.props.error(error, \"danger\"))\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.props.fetchCharacters()\r\n    this.props.fetchPlayers()\r\n  }\r\n  render() {\r\n    const characterName = (characters, id) => { if (id) { try { return characters.find(character => character._id === id).name } catch { return \"-\" } } else { return \"-\" } }\r\n    const playerName = (players, id) => { if (id) { try { return players.find(player => player._id === id).userName } catch { return \"-\" } } else { return \"-\" } }\r\n    const characters = this.props.characters.map((character) => <tr key={character._id}>\r\n      <td>{character.name}</td><td>{playerName(this.props.players, character.player)}</td>\r\n      <td class=\"table-operations\">\r\n        <Link id={character._id} onClick={this.editCharacter} to=\"admin/newCharacter\" class=\"btn btn-primary flex-fill m-2 w-100\">Muokkaa</Link>\r\n        <button id={character._id} onClick={this.deleteCharacter} class=\"btn btn-danger flex-fill m-2 w-100\">Poista</button></td>\r\n    </tr>);\r\n    let players = null\r\n    if (this.props.players)\r\n      players = this.props.players.map((player) => player.userType === \"player\" ? <tr key={player._id}>\r\n        <td>{player.userName}</td>\r\n        <td>{characterName(this.props.characters, player.character)}</td>\r\n        <td>{player.login}</td>\r\n        <td class=\"table-operations\"><Link id={player._id} onClick={this.editUser} to=\"admin/newUser\" class=\"btn btn-primary flex-fill m-2 w-100\">Muokkaa</Link>\r\n          <button id={player._id} onClick={this.deleteUser} class=\"btn btn-danger flex-fill m-2 w-100\">Poista</button></td>\r\n      </tr> : null);\r\n    if (this.props.admin === \"admin\")\r\n      return (\r\n        <main class=\"text-container container\">\r\n          <nav class=\"nav justify-content-center\">\r\n            <Link to=\"admin/transactions\" class=\"nav-item\">Maksutapahtumat</Link>\r\n            <Link to=\"admin/messages\" class=\"nav-item\">Keskustelut</Link>\r\n            <Link to=\"admin/newUser\" class=\"nav-item\">Uusi käyttäjä</Link>\r\n            <Link to=\"admin/newCharacter\" class=\"nav-item\">Uusi hahmo</Link>\r\n          </nav>\r\n          <h2>Hahmot</h2>\r\n          <table class=\"table table-dark w-100\">\r\n            <thead>\r\n              <tr><th>Nimi</th><th>Pelaaja</th><th class=\"w-25\">Operaatiot</th></tr>\r\n            </thead>\r\n            <tbody>{characters}</tbody>\r\n          </table>\r\n\r\n          <h2>Pelaajat</h2>\r\n          <table class=\"table table-dark w-100\">\r\n            <thead>\r\n              <tr><th>Oikea nimi</th><th>Hahmon nimi</th><th>Tunnus</th><th class=\"w-25\">Operaatiot</th></tr>\r\n            </thead>\r\n            <tbody>{players}</tbody>\r\n          </table>\r\n        </main>\r\n      )\r\n    else\r\n      return (\r\n        <main class=\"text-container container\"><p>Kirjaudu sisään nähdäksesi adminin työkalut.</p></main>\r\n      )\r\n  }\r\n}\r\n\r\nclass Editor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      something: ''\r\n    }\r\n  }\r\n  editor = null\r\n  componentDidMount() {\r\n    this.editor = init({\r\n      element: document.getElementById('editor-' + this.props.type),\r\n      onChange: html => this.props.changeEditor(html),\r\n      actions: ['bold', 'underline', 'italic', 'heading1', 'heading2', 'ulist', {\r\n        name: 'erase',\r\n        icon: 'X',\r\n        title: 'Poista muotoilut',\r\n        result: () => {\r\n          if (window.getSelection().toString()) {\r\n            let linesToDelete = window.getSelection().toString().split('\\n').join('<br>');\r\n            exec(formatBlock, '<div>');\r\n            document.execCommand('insertHTML', false, '<div>' + linesToDelete + '</div>');\r\n          } else {\r\n            exec(formatBlock, '<div>')\r\n          }\r\n        }\r\n      },],\r\n    })\r\n    this.editor.content.innerHTML = this.props.html\r\n  }\r\n  render() {\r\n    return (\r\n      <div id={\"editor-\" + this.props.type} className=\"pell\" />\r\n    )\r\n  }\r\n}\r\n\r\nexport class NewCharacter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: this.props.character.name,\r\n      age: this.props.character.age,\r\n      gender: this.props.character.gender,\r\n      player: this.props.character.player,\r\n      saldo: this.props.character.saldo,\r\n      description: this.props.character.description,\r\n      mechanics: this.props.character.mechanics,\r\n      plots: this.props.character.plots,\r\n      redirect: '',\r\n      newId: '',\r\n      error: ''\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.checkInput = this.checkInput.bind(this)\r\n    this.checkSuccess = this.checkSuccess.bind(this)\r\n  }\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (this.checkInput()) {\r\n      let newPlayer = false\r\n      let oldPlayer\r\n      if (this.props.character.player !== this.state.player && this.state.player)\r\n        newPlayer = true\r\n      if (this.props.character.player && this.props.character.player !== this.state.player)\r\n        oldPlayer = this.props.players.find(player => player._id === this.props.character.player)._id\r\n      const data = JSON.stringify({\r\n        name: this.state.name.replace(/[\"=';]/g, \"\"), // Clean input just to be sure\r\n        age: this.state.age.replace(/[\\D]/g, \"\"),\r\n        gender: this.state.gender.replace(/[\"=';]/g, \"\"),\r\n        player: this.state.player,\r\n        saldo: parseFloat(this.state.saldo),\r\n        description: this.state.description,\r\n        mechanics: this.state.mechanics,\r\n        plots: this.state.plots,\r\n        newPlayer: newPlayer,\r\n        oldPlayer: oldPlayer\r\n      })\r\n      let url = REACT_APP_SERVER_URL + \"/character/\"\r\n      if (this.props.character._id)\r\n        url += this.props.character._id\r\n      // Insert/update character\r\n      fetch(url, {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: data\r\n      })\r\n        .then(response => response.json())\r\n        .then(parsed => this.checkSuccess(parsed))\r\n        .catch(error => this.props.error(error, \"danger\"))\r\n    }\r\n  }\r\n  checkSuccess(result) {\r\n    let fail = false\r\n    result.forEach((part, counter) => {\r\n      if (part !== null && part.ok !== 1) {\r\n        this.props.error(\"Hahmon lisäys ei onnistunut.\")\r\n        fail = true\r\n        return\r\n      }\r\n    })\r\n    if (!fail)\r\n      this.setState({ redirect: <Redirect to=\"/admin\" /> })\r\n  }\r\n  checkInput() {\r\n    const form = document.getElementById('characterForm')\r\n    form.classList.add(\"was-validated\")\r\n    if (!form.checkValidity())\r\n      this.props.error(\"Kentissä oli virheitä.\", true)\r\n    return form.checkValidity()\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.players.length === 0)\r\n      this.props.fetchPlayers()\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.clearSelectedCharacter()\r\n  }\r\n  render() {\r\n    const players = this.props.players.map(player => <option value={player._id} key={player._id}>{player.userName}</option>)\r\n    return (\r\n      <main class=\"text-container container\">\r\n        <form onSubmit={this.handleSubmit} noValidate id=\"characterForm\">\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Nimi:</label>\r\n            <input class=\"form-control\" maxLength=\"30\" required pattern=\"[ .,\\-'a-öA-Ö\\d]*\" type=\"text\" value={this.state.name} onChange={this.handleChange} name=\"name\"></input>\r\n            <div class=\"invalid-feedback\">\r\n              Hahmolla täytyy olla nimi, ja ainoat sallitut erikoismerkit ovat .,-' ja numerot.\r\n            </div>\r\n          </div>\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Ikä:</label> <input class=\"form-control\" pattern=\"[\\d]*\" type=\"text\" value={this.state.age} onChange={this.handleChange} name=\"age\"></input>\r\n            <div class=\"invalid-feedback\">\r\n              Iän täytyy olla numero.\r\n            </div>\r\n          </div>\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Sukupuoli:</label> <input class=\"form-control\" pattern=\"[a-öA-Ö]*\" type=\"text\" value={this.state.gender} onChange={this.handleChange} name=\"gender\"></input>\r\n            <div class=\"invalid-feedback\">\r\n              Sukupuoli ei voi sisältää numeroita tai erikoismerkkejä.\r\n            </div>\r\n          </div>\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Pelaaja:</label> <select class=\"form-select\" value={this.state.player} onChange={this.handleChange} name=\"player\">\r\n              <option value=\"\" >-</option>{players}</select>\r\n          </div>\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Saldo:</label> <input class=\"form-control\" pattern=\"^[\\d]+(,\\d\\d)*\" type=\"text\" value={this.state.saldo} onChange={this.handleChange} name=\"saldo\"></input>\r\n            <div class=\"invalid-feedback\">\r\n              Saldon täytyy olla numero. Senttien erottimena käytetään pilkkua.\r\n            </div>\r\n          </div>\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Kuvaus: </label>\r\n            <Editor changeEditor={(data) => this.setState({ description: data })} html={this.state.description} type=\"description\" />\r\n          </div>\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Juonet: </label>\r\n            <Editor changeEditor={(data) => this.setState({ plots: data })} html={this.state.plots} type=\"plots\" />\r\n          </div>\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Pelimekaniikat: </label>\r\n            <Editor changeEditor={(data) => this.setState({ mechanics: data })} html={this.state.mechanics} type=\"mechanics\" />\r\n          </div>\r\n          <button type=\"submit\" onClick={this.handleSubmit} class=\"btn btn-primary\">Tallenna</button>\r\n          <Link to=\"/admin\" class=\"btn btn-warning m-3\">Poistu tallentamatta</Link>\r\n        </form>\r\n        {this.state.redirect}\r\n      </main>\r\n    );\r\n  }\r\n}\r\nexport class NewUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      login: '',\r\n      playerName: '',\r\n      selectedCharacter: '',\r\n      isLoaded: true,\r\n      redirect: ''\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.validateForm = this.validateForm.bind(this)\r\n  }\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (this.validateForm()) {\r\n      const data = {\r\n        login: this.state.login.replace(/[\"=';]/g, \"\"),\r\n        userName: this.state.playerName.replace(/[\"=';]/g, \"\"),\r\n        character: this.state.selectedCharacter,\r\n        userType: 'player'\r\n      }\r\n      let url = REACT_APP_SERVER_URL + \"/user/\"\r\n      if (this.props.existingUser)\r\n        url += this.props.existingUser._id\r\n\r\n      fetch(url, {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n      })\r\n        .then(response => this.setState({ redirect: <Redirect to=\"/admin\" /> }))\r\n        .catch(error => this.props.error(error, \"danger\"))\r\n    }\r\n  }\r\n  validateForm() {\r\n    const form = document.getElementById('userForm')\r\n    form.classList.add(\"was-validated\")\r\n    return form.checkValidity()\r\n  }\r\n  fillFields() {\r\n    this.setState({\r\n      login: this.props.existingUser.login,\r\n      playerName: this.props.existingUser.userName,\r\n      selectedCharacter: this.props.existingUser.character\r\n    })\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.existingUser)\r\n      this.fillFields()\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.clearSelectedUser()\r\n  }\r\n  render() {\r\n    const characters = this.props.characters.map((character) => <option value={character._id} key={character._id}>{character.name}</option>)\r\n    return (\r\n      <main class=\"text-container container\">\r\n        <form onSubmit={this.handleSubmit} noValidate id=\"userForm\">\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">* Kirjautumistunnus</label>\r\n            <input\r\n              minLength=\"6\"\r\n              maxLength=\"20\"\r\n              required\r\n              pattern=\"[a-öA-Ö\\d]*\"\r\n              id=\"loginInput\"\r\n              class=\"form-control\"\r\n              type=\"text\"\r\n              name=\"login\"\r\n              value={this.state.login}\r\n              onChange={this.handleChange}\r\n              placeholder=\"Käyttäjän kirjautumiseen käyttämä tunnus\"\r\n            ></input>\r\n            <div class=\"invalid-feedback\" id=\"loginFeedback\">\r\n              Tarkista, että kirjautumistunnus on vähintään 6 merkkiä pitkä ja sisältää ainoastaan kirjaimia ja numeroita.\r\n            </div>\r\n          </div><div class=\"mb-3\">\r\n            <label class=\"form-label\">* Pelaajan nimi</label>\r\n            <input minLength=\"3\" maxLength=\"30\" required pattern=\"[ .,\\-'a-öA-Ö\\d]*\" id=\"nameInput\" class=\"form-control\" type=\"text\" name=\"playerName\" value={this.state.playerName} onChange={this.handleChange}></input>\r\n            <div class=\"invalid-feedback\" id=\"nameFeedback\">\r\n              Nimi on pakollinen tieto ja se voi sisältää ainoastaan kirjaimia ja seuraavia merkkejä: ,.'-\r\n            </div>\r\n          </div><div class=\"mb-3\">\r\n            <label class=\"form-label\">Hahmo</label><select class=\"form-select\" name=\"selectedCharacter\" value={this.state.selectedCharacter} onChange={this.handleChange}><option value=\"\" key=\"none\">-</option>{characters}</select>\r\n          </div>\r\n          <button type=\"submit\" class=\"btn btn-primary\">Tallenna</button>\r\n          <Link to=\"/admin\" class=\"btn btn-warning m-3\">Poistu tallentamatta</Link>\r\n        </form>\r\n        {this.state.redirect}\r\n      </main>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AdminDashboard","import { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\"\r\n\r\nexport class PlayerInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            age: '',\r\n            gender: '',\r\n            saldo: '',\r\n            description: 'Hahmon kuvaus',\r\n            mechanics: 'Pelimekaniikat',\r\n            plots: 'Juonet'\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.character) {\r\n            this.setState({ name: this.props.character.name })\r\n            this.setState({ age: this.props.character.age })\r\n            this.setState({ gender: this.props.character.gender })\r\n            this.setState({ saldo: this.props.character.saldo })\r\n            this.setState({ description: this.props.character.description })\r\n            this.setState({ plots: this.props.character.plots })\r\n            this.setState({ mechanics: this.props.character.mechanics })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <main class=\"text-container container\">\r\n                <h2>Info</h2>\r\n                <ul>\r\n                    <li>Nimi: {this.state.name}</li>\r\n                    <li>Ikä: {this.state.age}</li>\r\n                    <li>Sukupuoli: {this.state.gender}</li>\r\n                    <li>Saldo: {this.state.saldo}</li>\r\n                </ul>\r\n                <h3>Kuvaus</h3>\r\n                <div dangerouslySetInnerHTML={{ __html: this.state.description }} />\r\n                <h3>Juonet</h3>\r\n                <div dangerouslySetInnerHTML={{ __html: this.state.plots }} />\r\n                <h3>Pelimekaniikat</h3>\r\n                <div dangerouslySetInnerHTML={{ __html: this.state.mechanics }} />\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport class Pay extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            amount: 0,\r\n            selectedCharacter: '',\r\n            redirect: ''\r\n        }\r\n        this.submit = this.submit.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.checkSuccess = this.checkSuccess.bind(this)\r\n    }\r\n    submit(e) {\r\n        e.preventDefault()\r\n        if (this.state.amount < 0)\r\n            this.setState({ warning: \"Virheellinen summa\" })\r\n        else if (this.state.amount > this.props.character.saldo)\r\n            this.setState({ warning: \"Tililläsi ei ole tarpeeksi saldoa\" })\r\n        else if (!this.state.selectedCharacter)\r\n            this.setState({ warning: \"Valitse maksun saaja\" })\r\n        else {\r\n            let c = window.confirm(\"Haluatko maksaa \" + this.state.amount + \" eurodollaria kohteelle \" +\r\n                this.props.characters.find(character => character._id === this.state.selectedCharacter).name + \"?\")\r\n            if (c) {\r\n                this.props.isReady(false)\r\n                const transaction = JSON.stringify({\r\n                    time: Date.now(),\r\n                    user: this.props.character._id,\r\n                    recipient: this.state.selectedCharacter,\r\n                    amount: this.state.amount\r\n                })\r\n                fetch('http://localhost:3002/pay/', {\r\n                    method: 'POST',\r\n                    mode: 'cors',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: transaction\r\n                })\r\n                    .then(response => response.json())\r\n                    .then(result => this.checkSuccess(result))\r\n                    .catch(error => this.props.error(error, \"danger\"))\r\n            }\r\n        }\r\n    }\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n    checkSuccess(response) {\r\n        this.props.isReady(true)\r\n        response.forEach((part, counter) => {\r\n            if (part.ok !== 1) {\r\n                this.setState({ warning: response.statusText })\r\n                return\r\n            }\r\n            // All clear, proceed\r\n            else if (counter === 2) {\r\n                this.props.fetchCharacters()\r\n                this.setState({\r\n                    amount: 0,\r\n                    selectedCharacter: ''\r\n                })\r\n                this.props.error(\"Maksu onnistui!\", \"success\")\r\n            }\r\n        });\r\n    }\r\n    componentWillMount() {\r\n        // Handle page refresh\r\n        if (!this.props.character)\r\n            this.setState({ redirect: <Redirect to=\"/dashboard\" /> })\r\n    }\r\n    render() {\r\n        const options = this.props.characters.map((character) => { if (character._id !== this.props.character._id) return <option value={character._id}>{character.name}</option>; else return null });\r\n        let saldo = \"???\"\r\n        if (this.props.character && this.props.character.saldo)\r\n            saldo = this.props.character.saldo\r\n        return (\r\n            <main class=\"text-container container\">\r\n                {this.state.redirect}\r\n                <h2>Pay</h2>\r\n                {this.state.success}\r\n                <p>Sinulla on <strong>{saldo}</strong> eurodollaria.</p>\r\n                <form onSubmit={this.submit}>\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Vastaanottaja</label>\r\n                        <select class=\"form-select\" name=\"selectedCharacter\" value={this.state.selectedCharacter} onChange={this.handleChange}>\r\n                            <option value=\"\">-</option>{options}</select>\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Summa</label>\r\n                        <input class=\"form-control\" name=\"amount\" required value={this.state.amount} onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <span>{this.state.warning}</span>\r\n                    <button type=\"submit\" class=\"btn btn-primary\">Maksa</button>\r\n                </form>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport class PlayerDashboard extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchCharacters()\r\n    }\r\n    render() {\r\n        let access = <p>Kirjaudu sisään nähdäksesi hahmotietosi</p>\r\n        if (this.props.userType === \"player\" && !this.props.loggedCharacter)\r\n            access = <p>Sinulle ei ole vielä annettu hahmoa. Yritä uudelleen myöhemmin tai ota yhteys pelinjohtoon.</p>\r\n        else if (this.props.loggedCharacter)\r\n            access = <div class=\"d-flex player-controls\">\r\n                <div class=\"flex-fill d-flex p-3\">\r\n                    <Link to=\"dashboard/pay\" class=\"btn btn-primary flex-fill fs-5\">Maksa</Link>\r\n                </div>\r\n                <div class=\"flex-fill d-flex p-3\">\r\n                    <Link to=\"dashboard/info\" class=\"btn btn-primary flex-fill fs-5\">Info</Link>\r\n                </div>\r\n                <div class=\"flex-fill d-flex p-3\">\r\n                    <Link to=\"dashboard/chat\" class=\"btn btn-primary flex-fill fs-5\">Viestit</Link>\r\n                </div></div>\r\n        return (\r\n            <main class=\"text-container container\">\r\n                <h2>Omat tiedot</h2>\r\n                {access}\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlayerInfo;\r\n","import { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\nimport { Trash } from 'react-bootstrap-icons'\r\nconst { REACT_APP_SERVER_URL } = process.env;\r\nclass ChatList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            chats: [],\r\n            mode: '',\r\n            isLoaded: false,\r\n            error: '',\r\n            selectedCharacters: [],\r\n            selectedChat: '',\r\n            warning: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.createChat = this.createChat.bind(this)\r\n        this.fetchChats = this.fetchChats.bind(this)\r\n    }\r\n    componentDidMount() {\r\n        this.fetchChats()\r\n    }\r\n    fetchChats() {\r\n        let url = REACT_APP_SERVER_URL + '/chat/'\r\n        if (this.props.loggedCharacter)\r\n            url += this.props.loggedCharacter\r\n        // If player has a character, fetch chats where they are participating. \r\n        // If admin, fetch all chats.\r\n        if (this.props.loggedCharacter || this.props.type === \"admin\") {\r\n            this.props.isReady(false)\r\n            fetch(url)\r\n                .then(res => res.json())\r\n                .then(\r\n                    (result) => {\r\n                        // fill character names into chats\r\n                        result.forEach(chat => {\r\n                            let newParticipants = []\r\n                            chat.participants.forEach(participant => newParticipants.push({ _id: participant, name: this.props.characters.find(a => a._id == participant).name }))\r\n                            chat.participants = newParticipants\r\n                        })\r\n                        this.setState({ chats: result, isLoaded: true });\r\n                        this.props.isReady(true)\r\n                    }\r\n                )\r\n                .catch(error => this.props.error(error, \"danger\"))\r\n        }\r\n        else if (this.props.type === \"guest\")\r\n            this.setState({ warning: 'Kirjaudu sisään nähdäksesi keskustelut.' })\r\n        else\r\n            this.setState({ warning: 'Sinulle ei ole asetettu omaa hahmoa. Ota yhteyttä pelinjohtoon.' })\r\n    }\r\n    handleChange(event) {\r\n        if (event.target.checked)\r\n            this.setState(prevState => ({ selectedCharacters: [...prevState.selectedCharacters, this.props.characters.find(character => character._id === event.target.name)] }))\r\n        else {\r\n            let filteredArray = this.state.selectedCharacters.filter(character => character._id !== event.target.name)\r\n            this.setState({ selectedCharacters: filteredArray })\r\n        }\r\n    }\r\n    createChat() {\r\n        const loggedCharacter = this.props.characters.find(character => character._id === this.props.loggedCharacter)\r\n        let characters = []\r\n        if (loggedCharacter)\r\n            characters = [loggedCharacter._id]\r\n        this.state.selectedCharacters.map(character => characters.push(character._id))\r\n        const data = JSON.stringify({ participants: characters })\r\n        fetch(REACT_APP_SERVER_URL + \"/chat/\", {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: data\r\n        })\r\n            .then(response => response.json())\r\n            .then(result => result.ok === 1 ? this.fetchChats() : this.props.error(\"Chatin luonti ei onnistunut.\"))\r\n            .catch(error => this.props.error(error, \"danger\"))\r\n        this.setState({ mode: '', selectedCharacters: [] })\r\n    }\r\n    removeChat(chat) {\r\n        console.log(chat)\r\n        let c = window.confirm(\"Haluatko poistaa keskustelun, jossa jäseninä ovat \" + chat.participants.map(a => a.name) + \"?\")\r\n        if (c) {\r\n            fetch(REACT_APP_SERVER_URL + \"/chat/delete/\" + chat._id, {\r\n                method: 'GET',\r\n                mode: 'cors',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(result => result.ok === 1 ? this.fetchChats() : this.props.error(\"Chatin poisto ei onnistunut.\"))\r\n                .catch(error => this.props.error(error, \"danger\"))\r\n        }\r\n    }\r\n    render() {\r\n        const characters = this.props.characters.filter(character => character._id !== this.props.loggedCharacter).map((character) =>\r\n            <div class=\"row\">\r\n                <div class=\"col-auto\">\r\n                    <input type=\"checkbox\" class=\"form-check-input\" name={character._id} onChange={this.handleChange} />\r\n                </div>\r\n                <div class=\"col-auto\">\r\n                    <label class=\"form-check-label\">{character.name}</label>\r\n                </div>\r\n            </div>)\r\n        const chats = this.state.chats.map((chat) =>\r\n            <li class=\"list-group-item chat-list-item d-flex justify-content-between\"><Link id={chat._id} to=\"/chat\"\r\n                onClick={() => this.props.changeChat(chat)}\r\n            >\r\n                {/* Filter current user's name and then show all other participants in a chat */}\r\n                {chat.participants\r\n                    .filter(a => a._id != this.props.loggedCharacter)\r\n                    .map((participant, index, array) => index === array.length - 1 ? participant.name : participant.name + \", \")}\r\n            </Link>\r\n                {this.props.type == \"admin\" ? <button class=\"btn btn-danger\" onClick={() => this.removeChat(chat)}><Trash /></button> : \"\"}\r\n            </li>);\r\n        if (this.state.mode === \"new\") {\r\n            return (<main class=\"text-container container\">\r\n                <h2>Valitse keskustelun jäsenet</h2>\r\n                {characters}\r\n                <br />\r\n                <button onClick={this.createChat} class=\"btn btn-primary\">Luo keskustelu</button>\r\n            </main>)\r\n        }\r\n        else {\r\n            return (\r\n                <main class=\"text-container container\">\r\n                    <h2>Keskustelut</h2>\r\n                    <p>{this.state.warning}</p>\r\n                    <button onClick={() => this.setState({ mode: \"new\" })} class=\"btn btn-primary\">Uusi keskustelu</button>\r\n                    <br />\r\n                    <ul class=\"list-group chat-list\">{chats}</ul>\r\n                </main>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default ChatList;","import { Component } from \"react\";\r\nconst { REACT_APP_SERVER_URL } = process.env;\r\nclass Transactions extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.props.isReady(false)\r\n        if (this.props.characters.length === 0)\r\n            this.props.fetchCharacters()\r\n        fetch(REACT_APP_SERVER_URL + '/transaction/')\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        history: result\r\n                    });\r\n                    this.props.isReady(true)\r\n                })\r\n            .catch(error => this.props.error(error, \"danger\"))\r\n    }\r\n    render() {\r\n        const history = this.state.history.map(event => {\r\n            let user = this.props.characters.find(character => character._id === event.user)\r\n            let recipient = this.props.characters.find(character => character._id === event.recipient)\r\n            // If characters match, use their names\r\n            user ? user = user.name : user = \"\"\r\n            recipient ? recipient = recipient.name : recipient = \"\"\r\n            return <tr id={event._id}>\r\n                <td>{user}</td>\r\n                <td>{recipient}</td>\r\n                <td>{event.amount}</td>\r\n                <td>{new Date(event.time).toLocaleString(\"fi-FI\")}</td>\r\n            </tr>\r\n        })\r\n        return (\r\n            <main class=\"text-container container\">\r\n                <h2>Maksutapahtumat</h2>\r\n                <table class=\"table transactions-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Maksaja</th>\r\n                            <th>Kohde</th>\r\n                            <th>Summa</th>\r\n                            <th>Aika</th>\r\n                        </tr></thead><tbody>\r\n                        {history}\r\n                    </tbody></table>\r\n            </main>\r\n        )\r\n    }\r\n}\r\nexport default Transactions","\r\nimport { Redirect } from \"react-router-dom\";\r\nconst { Component } = require(\"react\");\r\nclass OpenChat extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            input: '',\r\n            nameSent: false,\r\n            history: [],\r\n            ready: false,\r\n            chat: '',\r\n            currentName: this.props.name,\r\n            redirect: '',\r\n            noMessages: false\r\n        }\r\n        this.sendMessage = this.sendMessage.bind(this)\r\n        this.messageBeingWritten = this.messageBeingWritten.bind(this)\r\n        this.addMessage = this.addMessage.bind(this)\r\n        window.WebSocket = window.WebSocket || window.MozWebSocket;\r\n        if (!window.WebSocket) {\r\n            this.props.error(new Error(\"Selain ei tue chat-teknologiaa\"))\r\n        }\r\n        this.ws = this.props.ws\r\n    }\r\n    componentDidMount() {\r\n        // Go back if the page was refreshed\r\n        if (!this.props.chat)\r\n            this.setState({ redirect: <Redirect to=\"/\" /> })\r\n        else {\r\n            this.props.isReady(false)\r\n            // Fill character name if undefined\r\n            if (!this.state.currentName)\r\n                this.setState({ currentName: this.props.characters.find(character => character._id === this.props.characterId).name })\r\n            // Tell server that chat is open\r\n            this.ws.send(JSON.stringify({ chat: this.props.chat._id, type: 'openChat' }))\r\n\r\n            this.ws.onmessage = evt => {\r\n                // listen to data sent from the websocket server\r\n                const message = JSON.parse(evt.data)\r\n                if (message.type === 'message') {\r\n                    const newMessage = {\r\n                        time: new Date(message.data.time).toLocaleString(\"fi-FI\", { timeStyle: \"short\", dateStyle: \"medium\" }),\r\n                        text: message.data.text,\r\n                        author: message.data.author,\r\n                        authorId: message.data.authorId\r\n                    }\r\n                    this.setState(prevState => ({\r\n                        history: [...prevState.history, newMessage],\r\n                        noMessages: false\r\n                    }), () => { document.getElementById(\"message-container\").scrollTop = document.getElementById(\"message-container\").scrollHeight; return null })\r\n                }\r\n                if (message.type === 'history') {\r\n                    if (message.data.length === 0) {\r\n                        this.setState({ noMessages: true })\r\n                    }\r\n                    else {\r\n                        message.data.map(msg => this.setState(prevState => ({\r\n                            history: [...prevState.history, {\r\n                                time: new Date(msg.time).toLocaleString(\"fi-FI\", { timeStyle: \"short\", dateStyle: \"medium\" }),\r\n                                text: msg.text,\r\n                                author: msg.author,\r\n                                authorId: msg.authorId\r\n                            }]\r\n                        })))\r\n                        document.getElementById(\"message-container\").scrollTop = document.getElementById(\"message-container\").scrollHeight;\r\n                    }\r\n                    this.props.isReady(true)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    addMessage(message) {\r\n        if (message)\r\n            this.setState(prevState => ({\r\n                history: [...prevState.history, message]\r\n            }))\r\n    }\r\n    sendMessage(e) {\r\n        e.preventDefault()\r\n        const form = document.getElementById('msgForm')\r\n        form.classList.add(\"was-validated\")\r\n        if (form.checkValidity()) {\r\n            console.log(\"Sent \", this.state.input)\r\n            this.ws.send(JSON.stringify({ text: this.state.input, chat: this.props.chat, characterId: this.props.characterId, name: this.state.currentName, type: 'message' }))\r\n            this.setState({\r\n                input: ''\r\n            })\r\n        }\r\n    }\r\n    messageBeingWritten(event) {\r\n        this.setState({ input: event.target.value })\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.clear()\r\n    }\r\n    render() {\r\n        let history = ''\r\n        if (this.state.history.length !== 0)\r\n            history = this.state.history.map(message =>\r\n                <div key={message._id} class={(message.author === this.state.currentName) ? \"toast show my-message w-75\" : \"toast show mb-3 w-75\"}>\r\n                    {/* Show user's own messages on right */}\r\n                    <div class=\"toast-header\">\r\n                        <strong class=\"me-auto\">{message.author}</strong>\r\n                        <small>{message.time}</small>\r\n                    </div>\r\n                    <div class=\"toast-body\">\r\n                        {message.text}\r\n                    </div>\r\n                </div>\r\n            )\r\n        let header = ''\r\n        if (this.props.chat && this.props.chat.participants)\r\n            // Filter current user name and then show other participants in header\r\n            header = this.props.chat.participants\r\n                .filter(a => a._id != this.props.characterId)\r\n                .map((participant, index, array) => index === array.length - 1 ? participant.name : participant.name + \", \")\r\n        let noMessagesTip = \"\"\r\n        if (this.state.noMessages)\r\n            noMessagesTip = <p class=\"text-center\">Tässä keskustelussa ei ole vielä viestejä. Lähetä yksi!</p>\r\n        return (\r\n            <main class=\"chat-container d-flex flex-column text-container container\">\r\n                {this.state.redirect}\r\n                <h2>{header}</h2>\r\n                <div class=\"overflow-auto messages-container p-3 flex-grow-1\" id=\"message-container\">\r\n                    {noMessagesTip}\r\n                    {history}\r\n                </div>\r\n\r\n                <form onSubmit={this.sendMessage} noValidate id=\"msgForm\"><div class=\"input-group\">\r\n                    <input class=\"form-control\" type=\"text\" value={this.state.input} onChange={this.messageBeingWritten} id=\"message-input\" pattern=\"[ .,\\-a-öA-Ö\\d]*\" />\r\n                    <button class=\"btn btn-primary\" type=\"submit\">Lähetä</button>\r\n                    <div class=\"invalid-feedback\" id=\"messageFeedback\">\r\n                        Viesti voi sisältää ainoastaan kirjaimia, numeroita ja seuraavia merkkejä: ,.-\r\n                    </div>\r\n\r\n                </div></form>\r\n\r\n            </main>\r\n        )\r\n    }\r\n}\r\nexport default OpenChat","\r\nimport { Component } from 'react'\r\nimport { BrowserRouter as Router, Route, Link, Switch, Redirect } from \"react-router-dom\";\r\nimport Home from './Home.js'\r\nimport Info from './Info.js'\r\nimport AdminDashboard from './AdminDashboard.js'\r\nimport { Pay, PlayerInfo, PlayerDashboard } from './PlayerDashboard.js'\r\nimport { NewCharacter, NewUser } from './AdminDashboard.js'\r\nimport ChatList from './ChatList.js'\r\nimport Transactions from './Transactions.js'\r\nimport { List, ChatDots, Download } from 'react-bootstrap-icons'\r\nimport { Collapse, Dropdown, Toast } from 'bootstrap'\r\nimport '../css/custom.scss'\r\nimport OpenChat from './OpenChat.js';\r\nconst { REACT_APP_SERVER_URL } = process.env;\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userId: '',\r\n      userName: '',\r\n      login: '',\r\n      userType: 'guest',\r\n      userCharacter: '',\r\n      characters: [],\r\n      selectedChat: '',\r\n      nameSent: false,\r\n      ready: false,\r\n      notifMsg: '',\r\n      notifSender: '',\r\n      selectedCharacter: {\r\n        name: '',\r\n        age: '',\r\n        gender: '',\r\n        player: '',\r\n        saldo: 0,\r\n        description: '',\r\n        mechanics: '',\r\n        plots: ''\r\n      },\r\n      selectedUser: '',\r\n      players: [],\r\n      defaultCharacter: {\r\n        name: '',\r\n        age: '',\r\n        gender: '',\r\n        player: '',\r\n        saldo: 0,\r\n        description: '',\r\n        mechanics: '',\r\n        plots: ''\r\n      },\r\n      loading: false\r\n    }\r\n\r\n    this.login = this.login.bind(this)\r\n    this.logout = this.logout.bind(this)\r\n    this.loginSuccess = this.loginSuccess.bind(this)\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.fetchCharacters = this.fetchCharacters.bind(this)\r\n    this.fetchPlayers = this.fetchPlayers.bind(this)\r\n    this.showError = this.showError.bind(this)\r\n    this.ws = null\r\n    this.closeMenu = this.closeMenu.bind(this)\r\n    this.setReady = this.setReady.bind(this)\r\n  }\r\n  componentDidMount() {\r\n    // Check if login cookie\r\n    const cookies = decodeURIComponent(document.cookie)\r\n    const cookieArray = cookies.split(';')\r\n    cookieArray.forEach(cookie => {\r\n      while (cookie.charAt(0) === ' ') {\r\n        cookie = cookie.substring(1);\r\n      }\r\n      if (cookie.indexOf(\"login\") === 0) {\r\n        this.setState({ login: cookie.substring(6) }, () => this.login())\r\n        return;\r\n      }\r\n    })\r\n    this.fetchCharacters()\r\n  }\r\n  fetchPlayers() {\r\n    console.log(\"Fetching players\")\r\n    fetch(REACT_APP_SERVER_URL + '/user/')\r\n      .then(res => res.json())\r\n      .then(result => result.filter(a => a.userType == \"player\"))\r\n      .then(result => result.sort(function (a, b) { return a.userName > b.userName })) // Sort by player name\r\n      .then(\r\n        (result) => {\r\n          // Save into state\r\n          this.setState({\r\n            players: result,\r\n            loading: false\r\n          });\r\n        })\r\n      .catch(error => this.showError(error, \"danger\"))\r\n  }\r\n  login(event) {\r\n    if (event)\r\n      event.preventDefault()\r\n    if (this.state.login) {\r\n      fetch(REACT_APP_SERVER_URL + '/user/' + this.state.login)\r\n        .then(response => {\r\n          response.ok ? response.json().then(data => this.loginSuccess(data)) : this.showError(\"Kirjautuminen ei onnistunut. Tarkista oikeinkirjoitus.\", \"warning\")\r\n        })\r\n        .catch(error => this.showError(error, \"danger\"))\r\n    }\r\n  }\r\n  loginSuccess(data) {\r\n    this.setState({\r\n      userId: data._id,\r\n      userName: data.userName,\r\n      userType: data.userType,\r\n      userCharacter: data.character,\r\n      warning: ''\r\n    })\r\n    // create a cookie\r\n    document.cookie = \"login=\" + this.state.login\r\n    if (data.userType === \"player\") {\r\n      this.setState({ redirect: <Redirect to=\"/dashboard\" /> })\r\n    }\r\n    else {\r\n      this.setState({ redirect: <Redirect to=\"/admin\" /> })\r\n    }\r\n    this.ws = new WebSocket('ws://127.0.0.1:1337');\r\n    this.ws.onclose = () => {\r\n      console.log('disconnected')\r\n    }\r\n    this.ws.onmessage = evt => {\r\n      // listen to data sent from the websocket server\r\n      // But don't show notification if chat is open\r\n      const message = JSON.parse(evt.data)\r\n      console.log(\"Got a message: \", message)\r\n      if (this.state.selectedChat !== message.data.chat) {\r\n        const toast = new Toast(document.getElementById(\"notifToast\"))\r\n        this.setState({\r\n          notifMsg: message.data.text,\r\n          notifSender: message.data.author\r\n        }, toast.show())\r\n      }\r\n    }\r\n    this.ws.onopen = () => {\r\n      console.log('connected')\r\n      // Find username, either character name or \"admin\"\r\n      let user = this.state.characters.find(character => character._id === this.state.userCharacter)\r\n      let userName\r\n      if (user)\r\n        userName = user.name\r\n      else if (this.state.userType === \"admin\")\r\n        userName = \"admin\"\r\n      // If user has no character assigned, they cannot participate in chat\r\n      else {\r\n        console.log(\"No character assigned, closing websocket\")\r\n        this.ws.close()\r\n      }\r\n      // Send username to the websocket\r\n      if (userName && this.ws && this.ws.readyState === 1) {\r\n        this.ws.send(JSON.stringify({ text: userName, type: 'new', id: this.state.userCharacter }))\r\n        this.setState({ nameSent: true, ready: true })\r\n      }\r\n    }\r\n    this.ws.onerror = (e) => this.showError(e, \"danger\")\r\n  }\r\n  logout() {\r\n    this.setState({\r\n      userId: '',\r\n      userType: 'guest',\r\n      userCharacter: '',\r\n      login: '',\r\n      loading: false,\r\n      redirect: <Redirect to=\"/\" />\r\n    })\r\n    // Remove login cookie\r\n    document.cookie = \"login=\"\r\n    this.ws.close()\r\n  }\r\n  handleChange(event) {\r\n    this.setState({ login: event.target.value })\r\n  }\r\n  fetchCharacters() {\r\n    console.log(\"Fetch characters\")\r\n    fetch(REACT_APP_SERVER_URL + '/character/')\r\n      .then(res => res.json())\r\n      .then(result => result.sort(function (a, b) { return a.name > b.name })) // Sort by character name\r\n      .then(\r\n        (result) => {\r\n          // Save in state\r\n          this.setState({\r\n            characters: result,\r\n            loading: false\r\n          });\r\n        })\r\n      .catch(error => this.showError(error, \"danger\"))\r\n  }\r\n  showError(message, type) {\r\n    console.log(\"Showing error \", message)\r\n    // Prevent forever loading state\r\n    this.setState({ loading: false })\r\n    // Translate the most common errors\r\n    switch (message.message) {\r\n      case \"NetworkError when attempting to fetch resource.\":\r\n      case \"Failed to fetch\":\r\n        this.setState({ error: \"Yhteyttä palvelimeen ei saatu. Yritä hetken kuluttua uudelleen tai ota yhteys pelinjohtoon.\" }); break;\r\n      case \"JSON.parse: unexpected character at line 1 column 1 of the JSON data\":\r\n        this.setState({ error: \"Sovellus kohtasi virheen. Yritä hetken kuluttua uudelleen tai ota yhteys pelinjohtoon.\" }); break;\r\n      default:\r\n        this.setState({ error: message.message || message }); break;\r\n    }\r\n    // Show alert element\r\n    const alert = document.getElementById(\"errorMessage\")\r\n    alert.className = \"alert position-fixed bottom-0 start-50 translate-middle-x fade show\"\r\n    switch (type) {\r\n      case \"warning\": alert.classList.add(\"alert-warning\"); break;\r\n      case \"danger\": alert.classList.add(\"alert-danger\"); break;\r\n      case \"success\": alert.classList.add(\"alert-success\"); break;\r\n      default: break;\r\n    }\r\n    setTimeout(function () { alert.classList.remove('show') }, 7000);\r\n  }\r\n  closeMenu() {\r\n    // Only needed when using mid-size or smaller screen, since then a collapsing navbar will be used\r\n    if (window.screen.width < 992) {\r\n      const navbar = document.getElementById(\"navbar\")\r\n      const collapse = new Collapse(navbar)\r\n      collapse.hide()\r\n    }\r\n  }\r\n  setReady(state) {\r\n    if (state)\r\n      this.setState({ loading: false })\r\n    else\r\n      this.setState({ loading: true })\r\n  }\r\n  componentWillUnmount() {\r\n    if (this.ws)\r\n      this.ws.close()\r\n  }\r\n  render() {\r\n    let loginForm = <li class=\"nav-item\">\r\n      <form onSubmit={(e) => this.login(e)} class=\"w-100\">\r\n        <div class=\"input-group\">\r\n          <label for=\"login-input\" class=\"visually-hidden\">Kirjaudu sisään</label>\r\n          <input id=\"login-input\" type=\"text\" value={this.state.login} onChange={this.handleChange} class=\"form-control\"></input>\r\n          <button type=\"submit\" class=\"btn btn-primary\">Kirjaudu</button>\r\n        </div></form></li>\r\n    if (this.state.userId)\r\n      loginForm = <li class=\"nav-item\"><button type=\"submit\" onClick={this.logout} class=\"btn btn-primary\">Kirjaudu ulos</button></li>\r\n    let playerPage, adminPage = \"\"\r\n    if (this.state.userType === \"player\")\r\n      playerPage = <li class=\"nav-item\">\r\n        <Link to=\"/dashboard\" onClick={() => this.closeMenu()}>Pelaajan sivut</Link>\r\n      </li>\r\n    if (this.state.userType === \"admin\")\r\n      adminPage = <li class=\"nav-item\">\r\n        <Link to=\"/admin\" onClick={() => this.closeMenu()}>Hallintapaneeli</Link>\r\n      </li>\r\n    let loading\r\n    if (this.state.loading)\r\n      loading = <div class=\"spinner-border position-absolute top-50 start-50 loading \" role=\"status\">\r\n        <span class=\"visually-hidden\">Loading...</span>\r\n      </div>\r\n    return (\r\n      <Router>\r\n        <header class=\"navbar-container w-100\">\r\n          <nav class=\"navbar navbar-expand-lg main-nav container h-100\">\r\n            <div class=\"container-fluid\">\r\n              <Link class=\"navbar-brand\" to=\"/\">Totentanz</Link>\r\n              <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbar\" aria-controls=\"navbar\" aria-expanded=\"false\" aria-label=\"Valikko\">\r\n                <List />\r\n              </button>\r\n              <div class=\"collapse navbar-collapse justify-content-end\" id=\"navbar\">\r\n                <ul class=\"navbar-nav\">\r\n                  <li class=\"nav-item\">\r\n                    <Link to=\"/info\" onClick={() => this.closeMenu()}>Info</Link>\r\n                  </li>\r\n                  <li class=\"nav-item\">\r\n                    <Link to=\"/\" onClick={() => this.closeMenu()}>Ilmoittaudu</Link>\r\n                  </li>\r\n                  {playerPage}\r\n                  {adminPage}\r\n                  {loginForm}\r\n\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </nav>\r\n        </header>\r\n        {loading}\r\n        <div class=\"w-100 p-0\">\r\n          <div\r\n            class=\"alert alert-danger position-fixed bottom-0 start-50 translate-middle-x fade hidden\"\r\n            id=\"errorMessage\"\r\n            role=\"alert\"\r\n            aria-live=\"assertive\"\r\n            aria-atomic=\"true\"\r\n          >\r\n            {this.state.error}\r\n          </div>\r\n          {/* <div class=\"install-button position-fixed\" id=\"install-app\">\r\n            <Download />\r\n          </div> */}\r\n\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            <Route exact path=\"/info\">\r\n              <Info />\r\n            </Route>\r\n            <Route exact path=\"/dashboard/info\">\r\n              <PlayerInfo character={this.state.characters.find(character => character._id === this.state.userCharacter)} />\r\n            </Route>\r\n            <Route exact path=\"/dashboard/pay\">\r\n              <Pay\r\n                characters={this.state.characters}\r\n                character={this.state.characters.find(character => character._id === this.state.userCharacter)}\r\n                fetchCharacters={this.fetchCharacters}\r\n                isReady={this.setReady}\r\n                error={this.showError} />\r\n            </Route>\r\n            <Route exact path=\"/dashboard/chat\">\r\n              <ChatList\r\n                characters={this.state.characters}\r\n                changeChat={e => this.setState({ selectedChat: e })}\r\n                fetchCharacters={this.fetchCharacters}\r\n                loggedCharacter={this.state.userCharacter}\r\n                type={this.state.userType}\r\n                error={this.showError}\r\n                isReady={this.setReady}\r\n              />\r\n            </Route>\r\n            <Route exact path=\"/dashboard\">\r\n              <PlayerDashboard\r\n                loggedCharacter={this.state.userCharacter}\r\n                characters={this.state.characters}\r\n                fetchCharacters={this.fetchCharacters}\r\n                userType={this.state.userType} />\r\n            </Route>\r\n            <Route exact path=\"/admin/newCharacter\">\r\n              <NewCharacter\r\n                character={this.state.selectedCharacter}\r\n                players={this.state.players}\r\n                fetchPlayers={this.fetchPlayers}\r\n                fetchCharacters={this.fetchCharacters}\r\n                clearSelectedCharacter={() => this.setState({ selectedCharacter: this.state.defaultCharacter })}\r\n                error={this.showError}\r\n              />\r\n            </Route>\r\n            <Route exact path=\"/admin/newUser\">\r\n              <NewUser\r\n                characters={this.state.characters}\r\n                existingUser={this.state.players.find(player => player._id === this.state.selectedUser)}\r\n                clearSelectedUser={() => this.setState({ selectedUser: '' })}\r\n                fetchCharacters={this.fetchCharacters}\r\n                fetchPlayers={this.fetchPlayers}\r\n                error={this.showError}\r\n              />\r\n            </Route>\r\n            <Route exact path=\"/admin/messages\">\r\n              <ChatList\r\n                characters={this.state.characters}\r\n                fetchCharacters={this.fetchCharacters}\r\n                changeChat={e => this.setState({ selectedChat: e })}\r\n                loggedCharacter={this.state.userCharacter}\r\n                type={this.state.userType}\r\n                error={this.showError}\r\n                isReady={this.setReady}\r\n              />\r\n            </Route>\r\n            <Route exact path=\"/admin/transactions\">\r\n              <Transactions\r\n                characters={this.state.characters}\r\n                fetchCharacters={this.fetchCharacters}\r\n                error={this.showError}\r\n                isReady={this.setReady}\r\n              />\r\n            </Route>\r\n            <Route exact path=\"/admin\">\r\n              <AdminDashboard\r\n                characters={this.state.characters}\r\n                fetchCharacters={this.fetchCharacters}\r\n                selectCharacter={e => this.setState({ selectedCharacter: e.target.id })}\r\n                selectUser={e => this.setState({ selectedUser: e.target.id })}\r\n                players={this.state.players}\r\n                fetchPlayers={this.fetchPlayers}\r\n                changeCharacter={e => this.setState({ selectedCharacter: e })}\r\n                changeUser={e => this.setState({ selectedUser: e })}\r\n                admin={this.state.userType}\r\n                error={this.showError}\r\n              />\r\n            </Route>\r\n            <Route exact path=\"/chat\">\r\n              <OpenChat\r\n                chat={this.state.selectedChat}\r\n                characterId={this.state.userCharacter}\r\n                name={this.state.userType === \"admin\" ? \"admin\" : undefined}\r\n                characters={this.state.characters}\r\n                error={this.showError}\r\n                ws={this.ws}\r\n                isReady={this.setReady}\r\n                clear={() => this.setState({ selectedChat: '' })}\r\n              />\r\n            </Route>\r\n\r\n          </Switch>\r\n        </div>\r\n        {this.state.redirect}\r\n        <div id=\"notifToast\" class=\"toast position-fixed\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\r\n          <div class=\"toast-header\">\r\n            <ChatDots />\r\n            <strong class=\"me-auto ml-1\">{this.state.notifSender}</strong>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"toast\" aria-label=\"Close\"></button>\r\n          </div>\r\n          <div class=\"toast-body\">\r\n            {this.state.notifMsg}\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './js/App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n"],"sourceRoot":""}